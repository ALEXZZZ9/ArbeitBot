Фриланс-Бот

Главная идея: биржа фриланса наоборот!

Техническая часть:
============================================================
! - Добавить методы в dbmanager.js для работы с другими моделями
! - Написать FSM для перехода между кнопками в сессиях
	- после опубликования заказа и выбора первых фрилансеров - создается запись в коллекции sessions
	- используется для обработки кнопок до конца заключения сделки
	Логика работы FSM: 
		Вход: текст последней нажатой кнопки (или callback_data) - идет проверка на сюществование пары (Кнопка,chat_id) в sessions, если есть, то идем по условию, 
			  если нет, то либо сообщение, типа "неверная команда", либо ничего
		Условие: текст нажатой сейчас кнопка (или callback_data) - 
		Переход: переходим по FSM таблице в следущее состояние 

!	Структура таблицы FSM (FSMTable - хранится в БД):

						"Условие1" 		"Условие2"		...	"УсловиеN"		"Default"
		"Текст_Входа1": "Состояние1_1"	"Состояние1_2"		"Состояние1_N"	"Состояние1_Default"
		"Текст_Входа2":	"Состояние2_1"	"Состояние2_2"		"Состояние2_N"	"Состояние2_Default"
			...				...				...			...		...					...	
		"Текст_Входа3":	"СостояниеN_1"	"СостояниеN_2"	...	"СостояниеN_N"	"СостояниеN_Default"

		Где, "СостояниеA_B" - {
								"keyboard": keyboardObject, 				// default []
							   	"inline_keyboard": inlineKeyboardObject,	// default []
							   	"method": telegramMethod,					// какой метод использовать
							   	"method_params": jsonObject,				// параметры метода - их дефолтные значения, который мы переопределим, если надо
							   	"callback": callbackFunctionFSM				// функция для обработки перехода (записать что в БД, извлечь, 
							   												// подготовить параметры для отправки) 
							   }

		Где, callbackFunctionFSM:
		function callbackFunctionFSM(telegram_update) {
			// work with DB
				...
				// записать в sessions новое значение last_text

			method_params = FSMTable("method_params");
			// format method_params
			
			bot[FSMTable("method")](method_params)
			.catch(err => console.log(err));
		}

!	Структура коллекции sessions:
		{
			last_text: String,			// по обычной кнопке или callback_data
			freelancer_id: Number,		// bot DB id of user			
			jobs: [{					// список работ, которые заказчики предлагают
			    type: Schema.ObjectId,
			    ref: 'job',
			    required: false,
			    default: []
			}]
		}

- 	На вебхуки переписать



Logic:
============================================================
[] – button
[[]] – button collection
============================================================

/start
===========================
	> What are you looking for?
	< [Freelancers][Work]

[Freelancers]
===========================
	> You rock! Please add a new job by touching the relevant button
	< [[Client main menu]]

	[[Client main menu]]
	===========================
	[Post new job]
	[My jobs]
	[Help]
	===========================

	[Post new job]
	===========================
		> Which category suits your job the best?
		< [html5][javascript][nodejs]...
		===
		> Please give us a short description of your project (up to 500 characters)
		< (Job description)
		===
		> How much would you like to pay for this job? (this will affect what freelancers are shown to you)
		< [Negotiable][$5...$10][$10...$20]...
		===
		> You rock! Below goes the list of best freelancers that we could find. Please select which ones of them should receive your offer. <list of freelancer's names and their bio>
		< [All of them][@freelancer1][@freelancer2]... <- inline keyboard (each button should change status to 'pending', 'rejected', 'accepted' when suitable)
		< [[Client main menu]]

	[My jobs]
	===========================
		Multiple messages with inline keyboards and structure:
		> Job description
		< [Remove][Post again][Completed][Failed][Available freelancers] <- inline keyboard
		(client main menu is still there)

	[Help]
	===========================
		> Please contact us if you have any questions at all
		< [@borodutch] <- inline keyboard
		(client main menu is still there)

[Work]
===========================
if freelancer didn't fill below data yet
	> Please select a category that fits you the best
	< [html5][javascript][nodejs]...
	===
	> Please write a small (250 characters) description about yourself (will be visible to clients)
	< (small description within 250 chars)
	===
	> Please give us your average hourly rate in USD so that we can give you better offers
	< [$5...$10][$10...$20]...
	===
	> You rock! Now just wait for us to send you matching job offers or browse through the menu
	< [[Freelancer main menu]]
else
	> You rock! Now just wait for us to send you matching job offers or browse through the menu
	< [[Freelancer main menu]]
===========================

	[[Freelancer main menu]]
	===========================
	[Ready to work]\[Busy] (depends on 'busy' flag of freelancer)
	[Change categories]
	[Change bio]
	[Change hourly rate]
	[Help]
	===========================

	[Ready to work]
	===========================
		> You are now busy. You will not receive any job offers untill you switch back to "Ready to work"
		< [[Freelancer main menu]]

	[Busy]
	===========================
		> You are now ready to work. You will  receive job offers untill you switch back to "Busy"
		< [[Freelancer main menu]]

	[Change categories]
	===========================
		> Please select categories that match your skillset:
		< [html5][javascript][nodejs]... <- inline keyboard where yeach category can be selected\deselected
		(freelancer main menu is still there)

	[Change bio]
	===========================
		> Here is your existing bio: <description>. What would you like us to change it to?
		< (small description within 250 chars)
		===
		> You rock! Your bio has been updated
		< [[Freelancer main menu]]

	[Change hourly rate]
	===========================
		> You current hourly rate is: <hourly rate>. What would you like us to change it to?
		< [$5...$10][$10...$20]...
		===
		> You rock! Your hourly rate has been updated
		< [[Freelancer main menu]]

	[Help]
	===========================
		> Please contact us if you have any questions at all
		< [@borodutch] <- inline keyboard
		(freelancer main menu is still there)

When client selects freelancer in the list of freelancers that was shown to him, freelancer gets a message with job description and inline keyboard [I'm interested][Not interested]. When freelancer selects a button, his button on client side changes to relevant one (interested\not interested). When client removes or finishes job, all job candidates (freelancers who received invite) get the buttons to be inactive.