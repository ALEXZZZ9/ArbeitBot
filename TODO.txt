Фриланс-Бот

Главная идея: биржа фриланса наоборот!


Техническая часть:
============================================================
! - Добавить методы в dbmanager.js для работы с другими моделями
! - Написать FSM для перехода между кнопками в сессиях
	- после опубликования заказа и выбора первых фрилансеров - создается запись в коллекции sessions
	- используется для обработки кнопок до конца заключения сделки
	Логика работы FSM: 
		Вход: текст последней нажатой кнопки (или callback_data) - идет проверка на сюществование пары (Кнопка,chat_id) в sessions, если есть, то идем по условию, 
			  если нет, то либо сообщение, типа "неверная команда", либо ничего
		Условие: текст нажатой сейчас кнопка (или callback_data) - 
		Переход: переходим по FSM таблице в следущее состояние 

!	Структура таблицы FSM (FSMTable - хранится в БД):

						"Условие1" 		"Условие2"		...	"УсловиеN"		"Default"
		"Текст_Входа1": "Состояние1_1"	"Состояние1_2"		"Состояние1_N"	"Состояние1_Default"
		"Текст_Входа2":	"Состояние2_1"	"Состояние2_2"		"Состояние2_N"	"Состояние2_Default"
			...				...				...			...		...					...	
		"Текст_Входа3":	"СостояниеN_1"	"СостояниеN_2"	...	"СостояниеN_N"	"СостояниеN_Default"

		Где, "СостояниеA_B" - {
								"keyboard": keyboardObject, 				// default []
							   	"inline_keyboard": inlineKeyboardObject,	// default []
							   	"method": telegramMethod,					// какой метод использовать
							   	"method_params": jsonObject,				// параметры метода - их дефолтные значения, который мы переопределим, если надо
							   	"callback": callbackFunctionFSM				// функция для обработки перехода (записать что в БД, извлечь, 
							   												// подготовить параметры для отправки) 
							   }

		Где, callbackFunctionFSM:
		function callbackFunctionFSM(telegram_update) {
			// work with DB
				...
				// записать в sessions новое значение last_text

			method_params = FSMTable("method_params");
			// format method_params
			
			bot[FSMTable("method")](method_params)
			.catch(err => console.log(err));
		}

!	Структура коллекции sessions:
		{
			last_text: String,			// по обычной кнопке или callback_data
			freelancer_id: Number,		// bot DB id of user			
			jobs: [{					// список работ, которые заказчики предлагают
			    type: Schema.ObjectId,
			    ref: 'job',
			    required: false,
			    default: []
			}]
		}

- 	На вебхуки переписать



Логика работы:
============================================================

Старт:
===========================
(где не указано - обычные кнопки юзаются)
/start - сообщение типа "Привет, что ищем?"
кнопки [["Freelancers"], ["Work"]]

["Freelancers"]
===========================
! - добавить заказ
	!- введите название проекта
	!- ввежите описание проекта
	!- введите категории проекта - из списка, можно добавить свою 
	    - продумать как модерировать
	!- введите стоимость ОТ/ДО
	    - за час, за проекта
- получить список свободных кандидатов - 
!    - добавить статус, рейтинг в модель freelancer
!    - предусмотреть возможность отображать фуллнейм и писать человеку без юзернама - вплоть до подтверждения фрилансером работы, показаны bot_username`s
    список инлайн кнопок с юзернеймами фрилансеров "@username -" - внизу обычная кнопка - "Отправить всем", "Завершить поиск"
    - показывать их псевдонимы из биржи!!!
    - возможность сортировать кандидатов, по: рейтингу, времени в боте, стоимости, еще?
- при клике на инлайн кнопку фрилансера ему отправляется уведомление, что его выбрали и он должен либо подтвердить, либо отказаться
- если, фрилансер откликнулась, то кнопка меняется на "@username +" и заказчику присылается уведомление
    - при ответе фрилансера учитывать действует ли еще заявка - не выбран ли исполнитель
- ["Отправить всем"] - тоже самое, но всем
- тех заказчиков, что откликнулись можно выбрать и написать им
- ["Завершить поиск"] - фрилансерам, кому отправил инвайт заказчик, отправляется отмена, в базу /job сохраняется заказ, конец 


["Work"]
===========================
- новый фрилансер оставляет свои данные: категории, часовой рейт
- писать что bot_username изменить нельзя!! - что бы нельзя было ерундой заниматься - один телеграм акк - один бот акк - Западный Свердловск!
	- значек "Это реальный telegram username" - проверять при выдаче списка с этим фрилансером - через тг-кли?
    - возможность добавлять категории - модерировать
- при создании нового профиля он подписывается на все выбранные категории
- существующий может изменять данные совего профиля
- существующий может получать инвайты от заказчиков - 
    т.е. он в одно время или фрилансер или заказчик и переключаться должен по кнопкам - так норм?

